{
    "input": "Universidad Auto´noma De Baja\nCalifornia\nFacultad de Ingenier´ıa\nPra´ctica 7\nLuis Manuel Nu´n˜ez L´opez\nProfesor: Omar Mun˜oz Urias\nElectro´nica avanzada\n25 de octubre del 20241. Introduccio´n\nLa tecnolog´ıa de transmisi´on de datos por infrarrojo es muy utilizada, a pesar\nde que haya diferentes m´etodos de comunicacio´n el m´etodo infrarrojo sigue siendo\nmuy utilizado. En esta practica miraremos acerca de eso, de la transmisi´on de datos\na trav´es de infrarrojo, y como podemos descifrarla. En este caso se miro acerca el\nm´etodo de codificacio´n Manchester que es el ma´s comu´n de todos, por lo que con\neste m´etodo se podr´a decodificar las sen˜ales infrarrojas recibidas, con el dispositivo\nVs1838, es disen˜ado para captar y decodificar sen˜ales infrarrojas, permitiendo su\nprocesamiento a trav´es de un microcontrolador, como Arduino. A lo largo de es-\nta pra´ctica, emplearemos Arduino para recibir y procesar las sen˜ales decodificadas,\nprograma´ndolo para que las sen˜ales IR desencadenen diversas acciones en el siste-\nma, tales como la activacio´n de luces LED. De esta manera, se pondra´n en pr´actica\nconocimientos de programacio´n y control de dispositivos. podremos hacer que estas\nsen˜ales hagan algo que queramos. En esta pr´actica no solo vimos acerca de los re-\nceptores infrarrojos sino tambi´en del led, incluyendo la configuracio´n y control de\nun LED RGB, el cual permite mezclar colores de luz mediante la combinacio´n de\nlos colores primarios de luz: rojo, verde y azul. Esto nos permitira´ crear diferentes\ncombinaciones de colores en el LED RGB mediante variaciones en la sen˜al de en-\ntrada, mostrando as´ı co´mo se puede utilizar la sen˜al IR decodificada para activar\nefectos visuales espec´ıficos.\n12. Problem´atica y Justificaci´on\nLa transmisio´n de datos por medio de infrarrojos es se ha hecho desde hace\nan˜os, esta capacidad de poder controlar algo por distancia se hacia desde hace mu-\ncho que el bluethoth existiera, la importancia de reconocer los desaf´ıos recurrentes\nde garantizar la precisio´n y la robustez en la transmisi´on de datos, especialmen-\nte en ambientes con interferencias o largas distancias. La codificacio´n Manchester\nes un m´etodo ampliamente utilizado para asegurar la integridad de la sen˜al, pe-\nro su implementacio´n en hardware requiere un proceso preciso de decodificacio´n y\nsincronizacio´n. Este laboratorio es necesario para consolidar conocimientos te´oricos\nsobre la transmisi´on de datos mediante infrarrojos y la codificaci´on Manchester en\nun contexto pr´actico, con el fin de formar habilidades aplicadas en electro´nica y\nprocesamiento de sen˜ales.\n3. Marco Te´orico\nUn sensor infrarrojo es una parte del espectro electromagn´etico que se situ´a ma´s\nalla´ del espectro visible. Este artilugio es capaz de detectar e interpretar la radia-\ncio´n infrarroja, invisible para el ojo humano, emitida por seres vivos y objetos que\nse encuentren a una temperatura mayor a 0 grados Kelvin. En lo referente al funcio-\nnamiento de un sensor infrarrojo, se basa en dos componentes principales: un emisor\ny un receptor.\nEl emisor lanza una sen˜al infrarroja que, al encontrar un ser vivo o un objeto,\nse refleja hacia el receptor. Dependiendo de la intensidad de la sen˜al reflejada, los\ninfrarrojos pueden determinar la distancia del ser vivo u objeto detectado. Para su\nfuncionamiento, estos dispositivos se sirven de componentes piroel´ectricos sensibles\na las variaciones de radiacio´n en un campo determinado.\nLa codificaci´on manchester es muy usada, esta tambi´en se conoce como codifica-\ncio´n defase. El valor lo´gico se define por la polaridad de la transici´on entre la ra´faga\nde pulsos y el espacio. “Espacio a ra´faga de pulsos” denota un “0” l´ogico, “r´afa-\nga de pulsos a espacio” denota un “1” l´ogico. Este esquema de modulaci´on aplica\nuna lo´gica similar a la PWM, pero difiere en los detalles t´ecnicos del proceso. En\nla codificaci´on Manchester se introduce el concepto de bits. Los bits se dividen en\nlongitudes iguales, siendo una mitad la marca del pulso y la otra un espacio. La\nprimera mitad esta´ representada por el d´ıgito binario 0, mientras que el espacio est´a\nrepresentado por el 1.\nEn esta pr´actica se vio´ el uso del led, pero ¿Co´mo funciona el LED? Se basa en la\nactivaci´on de una uni´on PN, consistente en una estructura ba´sica de componentes\nelectro´nicos denominados semiconductores (fundamentalmente, diodos y transisto-\nres inorg´anicos). Todo diodo consta de dos patillas de conexio´n, una larga y una\ncorta. Mientras la larga se conecta al polo positivo, la corta se conecta al polo ne-\ngativo. Esto es lo que permite el paso de la corriente. Los componentes que forman\nparte de los semiconductores, por otro lado, determinara´n los colores que emitira´n.\nPor poner algunos ejemplos, el naranja se produce con fosfuro de galio y ars´enico,\nfosfuro de aluminio-galio-indio y fosfato de galio; el verde se logra a partir de fosfato\nde galio y fosfuro de aluminio-galio-indio, mientras que el azul se crea a partir de\nseleniuro de zinc.\n24. Procedimiento\n1. Realice la decodificacio´n de al menos 5 botones de un control remoto infrarojo\n2. Conecte 5 Leds a pines digitales del arduino y asigne la decodificaci´on de ca-\nda bot´on para encender cada uno de los leds.\n3. Asigne una secuencia de encendido ascendente y apagado descendente con los\n5 leds.\n4. Controle un LED RGB haciendo distintas combinaciones segu´n el boton pre-\nsionado.\n5. Adem´as de las instrucciones mostradas en el documento, medir con un oscilosco-\npio la salida del vs1838 y comparar el tiempo del ancho del pulso en alto con lo que\ndice la hoja de datos.\n5. Resultado con pruebas\nFigura 1: Circuito armado\n3En la hoja del fabricante indica que debe haber una sen˜al de 600 uS, tal y como\nlo muestra el osciloscopio\nFigura 2: Sen˜al de 600us\nVideo del funcionamiento\nCo´digo de arduino para el funcionamiento\n#include <IRremote.h>\n//AD52C7EA netflix\n//946BC7EA paramount\n//8877C7EA appletv\n//B14EC7EA hbomax\n//9D62C7EA mimi\n//D52AC7EA ok\nint IR = 11;\nint ledVerde=2;\nint ledAzul=3;\nint ledBlanco=4;\nint ledAmarillo=5;\nint ledAzulRaro =6;\nint valorLectura =0;\nint valorDeSwitch = 0;\nint B = 8; //DF20C7EA\nint G =9; //EF10C7EA\n4int R =10; //F00FC7EA\nint valorLectura2 ;\nvoid setup() {\nSerial . begin(9600);\nIrReceiver . begin(IR, DISABLE LED FEEDBACK);\npinMode(ledVerde ,OUTPUT);\npinMode(ledAzul ,OUTPUT);\npinMode(ledBlanco ,OUTPUT);\npinMode(ledAmarillo ,OUTPUT);\npinMode(ledAzulRaro ,OUTPUT);\npinMode(R,OUTPUT);\npinMode(G,OUTPUT);\npinMode(B,OUTPUT);\n}\nvoid loop() {\nif (IrReceiver .decode()) {\nvalorLectura2 =IrReceiver .decodedIRData.decodedRawData;\nif (valorLectura != valorLectura2 ){\nvalorLectura = IrReceiver .decodedIRData.decodedRawData;\nvalorDeSwitch = valorLectura ;\n}\nelse\n{\nvalorDeSwitch = 0;\n}\nSerial . println (IrReceiver .decodedIRData.decodedRawData , HEX);\nif (IrReceiver .decodedIRData.decodedRawData == 0xAD52C7EA)\n{\ndigitalWrite(ledVerde ,! digitalRead(ledVerde ));\n}\nif (IrReceiver .decodedIRData.decodedRawData == 0x946BC7EA)\n{\ndigitalWrite(ledAzul ,! digitalRead(ledAzul ));\n}\nif (IrReceiver .decodedIRData.decodedRawData == 0x8877C7EA)\n{\ndigitalWrite(ledBlanco ,! digitalRead(ledBlanco ));\n}\nif (IrReceiver .decodedIRData.decodedRawData == 0xB14EC7EA)\n{\ndigitalWrite(ledAmarillo ,! digitalRead(ledAmarillo ));\n}\nif (IrReceiver .decodedIRData.decodedRawData == 0x9D62C7EA)\n{\ndigitalWrite(ledAzulRaro ,! digitalRead(ledAzulRaro ));\n}\nif (IrReceiver .decodedIRData.decodedRawData == 0xD52AC7EA)\n{\n5if (digitalRead(ledVerde) == 1)\n{\ndigitalWrite(ledAzulRaro ,LOW);\ndelay (200);\ndigitalWrite(ledAmarillo ,LOW);\ndelay (200);\ndigitalWrite(ledBlanco ,LOW);\ndelay (200);\ndigitalWrite(ledAzul ,LOW);\ndelay (200);\ndigitalWrite(ledVerde ,LOW);\ndelay (200);\n}\nelse{\ndigitalWrite(ledVerde ,HIGH);\ndelay (200);\ndigitalWrite(ledAzul ,HIGH);\ndelay (200);\ndigitalWrite(ledBlanco ,HIGH);\ndelay (200);\ndigitalWrite(ledAmarillo ,HIGH);\ndelay (200);\ndigitalWrite( ledAzulRaro ,HIGH);\ndelay (200);\n}\n}\nif (IrReceiver .decodedIRData.decodedRawData ==0xDF20C7EA)\n{\ndigitalWrite(R,! digitalRead(R));\n}\nif (IrReceiver .decodedIRData.decodedRawData ==0xDF20C7EA)\n{\ndigitalWrite(R,! digitalRead(R));\n}\nif (IrReceiver .decodedIRData.decodedRawData ==0xF00FC7EA)\n{\ndigitalWrite(R,! digitalRead(R));\n}\nif (IrReceiver .decodedIRData.decodedRawData ==0xEF10C7EA)\n{\ndigitalWrite(G,! digitalRead(G));\n}\nif (IrReceiver .decodedIRData.decodedRawData ==0xDF20C7EA)\n{\ndigitalWrite(B,! digitalRead(B));\n}\nIrReceiver .resume ();\n6}\ndelay (100);\n}\n76. Conclusio´n\nEn esta pr´actica comprend´ı el funcionamiento del receptor infrarrojo, adema´s del\ndel RGB, con un PWM se le puede modificar la potencia del color si es necesario o\nsi queremos hacer diferentes variaciones de colores, por lo que es importante tenerlo\nen cuenta, en el caso del receptor no hay mucho problema ya que era un asunto\nde programaci´on el recibir la sen˜al y poder hacer que hubiera una salida en un pin\ndigital, en mi caso mi control era demasiado potente es decir al presionar un boto´n el\nreceptor podr´ıa recibirlo desde demasiado lejos, no como el de mis compan˜eros que\nno ten´ıa tanta potencia, adem´as de que pareciera que enviara diferentes patrones\ncuando presionaba un boto´n, es decir es como si enviara dos patrones, puede ser que\nas´ı este configurado para la comunicacio´n con el televisor, ya que el control que use\nera un control de televisor.\n7. Bibliograf´ıa\nReceptor IR VS1838B. (s. f.). VISTRONICA S.A.S. https://www.vistronica.com/\nsensores/receptor- ir-vs1838b- detail.html.\nBernardo.Valades. (2024, 3 enero). Tipos de sensores infrarrojos y sus aplicaciones.\nSegurilatam.https://www.segurilatam.com/actualidad/sensores-infrarrojos-tipos-funciones\n8"
}